import pandas as pd

def cohort_tracking(df, cohort_period='2020_1'):
    # Extract original cohort IDs and their classes from cohort_period
    cohort_df = df[df['yr_qtr'] == cohort_period][['ID', 'class']].drop_duplicates()

    # Classes in cohort
    classes = cohort_df['class'].unique()

    # Initialize results storage
    results = []

    # IDs in original cohort
    cohort_ids = set(cohort_df['ID'])

    # Iterate over all unique quarters
    for period in sorted(df['yr_qtr'].unique()):
        period_df = df[df['yr_qtr'] == period]

        found_counts = period_df[period_df['ID'].isin(cohort_ids)].groupby('class')['ID'].nunique()
        found_counts = found_counts.reindex(classes, fill_value=0)

        # Unfound IDs are cohort IDs not in this period
        found_ids = set(period_df['ID']).intersection(cohort_ids)
        unfound_ids = cohort_ids - found_ids
        unfound_counts = cohort_df[cohort_df['ID'].isin(unfound_ids)].groupby('class')['ID'].nunique()
        unfound_counts = unfound_counts.reindex(classes, fill_value=0)

        # Record results for each class
        for cls in classes:
            results.append({
                'yr_qtr': period,
                'class': cls,
                'found_count': found_counts[cls],
                'unfound_count': unfound_counts[cls]
            })

    return pd.DataFrame(results)

# Example usage:
# result_df = cohort_tracking(your_df)
