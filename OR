import pandas as pd, seaborn as sns, matplotlib.pyplot as plt, numpy as np, time

def id_presence_heatmap(df, ids=None, yr_qtrs=None, batch_size=100):
    ids_all = df['ID'].unique() if ids is None else pd.Index(ids).unique()
    yr_qtrs = sorted(df['yr_qtr'].unique()) if yr_qtrs is None else yr_qtrs
    n_batches = (len(ids_all)+batch_size-1)//batch_size
    for b in range(n_batches):
        start=b*batch_size; end=min(start+batch_size,len(ids_all)); ids_batch=ids_all[start:end]
        mat=pd.DataFrame(0,index=yr_qtrs,columns=ids_batch)
        for _,r in df.iterrows():
            if r['ID'] in ids_batch and r['yr_qtr'] in yr_qtrs: mat.loc[r['yr_qtr'],r['ID']]=1
        longest_gaps={c:max([len(s) for s in ''.join(map(str,1-mat[c].values)).split('1')]) for c in mat.columns}
        avg_gap=np.mean(list(longest_gaps.values())); ids_no_gap=sum(v==0 for v in longest_gaps.values())
        plt.figure(figsize=(max(len(ids_batch),1)/3,max(len(yr_qtrs),1)/3))
        ax=sns.heatmap(mat,cmap=sns.color_palette(["red","green"]),cbar=False)
        for j,c in enumerate(mat.columns):
            arr=(1-mat[c].values)
            if arr.sum()==0: continue
            best=0; end_i=-1; run=0
            for i,v in enumerate(arr):
                if v==1:
                    run+=1
                    if run>best: best=run; end_i=i
                else:
                    run=0
            y0=end_i-best+1
            ax.text(j+0.5,y0+best/2+0.5,str(best),ha='center',va='center',color='white',fontsize=8)
        plt.title(f"IDs {start}-{end} of {len(ids_all)} | Average longest gap length: {avg_gap:.2f} | IDs without gap: {ids_no_gap}")
        plt.xlabel("ID"); plt.ylabel("yr_qtr"); plt.show()
        time.sleep(1)
