import pandas as pd

def quarterly_diffs(
    df_cohort: pd.DataFrame,
    *,
    sector: str = None,
    original_class: str = None,
    current_class: str = None
) -> pd.DataFrame:
    """
    Returns a pivot table of quarterly gains/losses in 'count' by state.
    
    Filters df_cohort by the optional sector, original_class, and/or current_class,
    then for each state and yr_qtr computes:
       total = sum(count)
       diff  = total_current_qtr - total_prev_qtr
    
    Finally pivots so:
        index = state
        columns = yr_qtr
        values = diff
    
    Parameters
    ----------
    df_cohort : pd.DataFrame
        Must contain ['state','yr_qtr','sector','original_class','current_class','count'].
    sector : str, optional
        If given, only include rows where df_cohort['sector']==sector.
    original_class : str, optional
        If given, only include rows where df_cohort['original_class']==original_class.
    current_class : str, optional
        If given, only include rows where df_cohort['current_class']==current_class.
    
    Returns
    -------
    pd.DataFrame
        Pivot table of differences, with NA where no data or first-quarter.
    """
    df = df_cohort.copy()
    # apply filters
    if sector is not None:
        df = df[df['sector'] == sector]
    if original_class is not None:
        df = df[df['original_class'] == original_class]
    if current_class is not None:
        df = df[df['current_class'] == current_class]
    
    # aggregate counts by state & quarter
    agg = (
        df
        .groupby(['state','yr_qtr'])['count']
        .sum()
        .reset_index(name='total')
    )
    
    # sort and compute diff
    agg = agg.sort_values(['state','yr_qtr'])
    agg['prev_total'] = agg.groupby('state')['total'].shift(1).fillna(0)
    agg['diff'] = agg['total'] - agg['prev_total']
    
    # pivot to wide form
    pivot = agg.pivot(index='state', columns='yr_qtr', values='diff')
    return pivot

# — example usage — 

# 1) Low→High transitions by quarter
low_to_high_qtr = quarterly_diffs(
    df_cohort,
    original_class='low',
    current_class='high'
)
print("Quarterly Low→High Gains/Losses:")
print(low_to_high_qtr)

# 2) Sector 6244 attractor dynamics by quarter
sector_6244_qtr = quarterly_diffs(
    df_cohort,
    sector='6244'
)
print("\nQuarterly net change in sector 6244 counts:")
print(sector_6244_qtr)

# 3) If you want a CSV:
low_to_high_qtr.to_csv("low_to_high_qtr_diffs.csv")
sector_6244_qtr.to_csv("sector_6244_qtr_diffs.csv")
