import pandas as pd
import plotly.express as px

# Load & prep data
xlsx_path = "cohort_tracking.xlsx"  # replace with your file path
xls = pd.ExcelFile(xlsx_path)
df = pd.concat(
    [pd.read_excel(xls, sheet_name=sh).assign(state=sh) for sh in xls.sheet_names],
    ignore_index=True
)

# Filter to 2020-1 cohort
init = (
    df[df["yr_qtr"] == "2020-1"]
    .loc[:, ["state", "sector", "original_class"]]
    .drop_duplicates()
)
df_cohort = df.merge(init, on=["state", "sector", "original_class"], how="inner")

# List of states and initial subset
states = sorted(df_cohort["state"].unique())
first_state = states[0]
df0 = df_cohort[df_cohort["state"] == first_state]

# Create animated scatter for first state
fig = px.scatter(
    df0,
    x="yr_qtr",
    y="current_class",
    size="count",
    color="current_class",
    animation_frame="yr_qtr",
    animation_group="sector",
    hover_data=["sector", "original_class"],
    title=f"Cohort Evolution — {first_state}"
)

# Add dropdown to switch states
fig.update_layout(
    updatemenus=[dict(
        buttons=[
            dict(
                method="update",
                label=state,
                args=[
                    # Update data for each trace
                    {
                        "x": [df_cohort[df_cohort["state"] == state]["yr_qtr"]] * len(fig.data),
                        "y": [df_cohort[df_cohort["state"] == state]["current_class"]] * len(fig.data),
                        "marker.size": [df_cohort[df_cohort["state"] == state]["count"]] * len(fig.data)
                    },
                    {"title": f"Cohort Evolution — {state}"}
                ]
            ) for state in states
        ],
        direction="down",
        showactive=True,
        x=0.1,
        xanchor="left",
        y=1.15,
        yanchor="top"
    )]
)

# Display the figure
fig.show()
