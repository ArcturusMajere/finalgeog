import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
import numpy as np
import time

def id_presence_heatmap(df, ids=None, yr_qtrs=None, batch_size=100):
    if ids is None: 
        ids_all = df['ID'].unique()
    else: 
        ids_all = pd.Index(ids).unique()
    if yr_qtrs is None: 
        yr_qtrs = sorted(df['yr_qtr'].unique())

    n_batches = (len(ids_all) + batch_size - 1) // batch_size

    for batch_idx in range(n_batches):
        start = batch_idx * batch_size
        end = min(start + batch_size, len(ids_all))
        ids_batch = ids_all[start:end]

        mat = pd.DataFrame(0, index=yr_qtrs, columns=ids_batch)
        for _, r in df.iterrows():
            if r['ID'] in ids_batch and r['yr_qtr'] in yr_qtrs:
                mat.loc[r['yr_qtr'], r['ID']] = 1

        # compute longest gap per ID
        longest_gaps = {}
        for col in mat.columns:
            arr = mat[col].values
            gaps, c = [], 0
            for v in arr:
                if v == 0:
                    c += 1
                else:
                    gaps.append(c)
                    c = 0
            gaps.append(c)
            longest_gaps[col] = max(gaps)
        avg_gap = np.mean(list(longest_gaps.values()))
        ids_no_gap = sum(v == 0 for v in longest_gaps.values())

        plt.figure(figsize=(max(len(ids_batch),1)/3, max(len(yr_qtrs),1)/3))
        sns.heatmap(mat, cmap=sns.color_palette(["red","green"]), cbar=False)
        plt.title(f"IDs {start}-{end} of {len(ids_all)} | "
                  f"Average longest gap length: {avg_gap:.2f} | "
                  f"IDs without gap: {ids_no_gap}")
        plt.xlabel("ID")
        plt.ylabel("yr_qtr")
        plt.show()

        time.sleep(1)  # pause between plots
