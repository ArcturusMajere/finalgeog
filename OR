# Sample DataFrame with a 'state' column
data = {
    "ID": range(1, 28),
    "WAGE_DIFF": [1234.567, -500.45, 789.3] * 9,
    "COUNT_A": [10, 20, 30] * 9,
    "WAGE_CHANGE": [5000.345, -200.22, 100.55] * 9,
    "COUNT_B": [5, 15, 25] * 9,
    "state": ["NY", "CA", "TX"] * 9,
}

# Creating DataFrame
df = pd.DataFrame(data)

# Formatting function with 'state' column unchanged
def format_dataframe(df):
    formatted_df = df.copy()
    
    # Apply formatting
    for col in formatted_df.columns:
        if "WAGE" in col:
            formatted_df[col] = formatted_df[col].apply(lambda x: f"${x:,.2f}")
        elif col != "state":  # Leave 'state' column unchanged
            formatted_df[col] = formatted_df[col].astype(int)
    
    # Convert to HTML with styling
    styled_html = formatted_df.style.set_properties(**{
        'text-align': 'center'
    }).set_table_styles([{
        'selector': 'th, td',
        'props': [('text-align', 'center')]
    }]).to_html()

    return styled_html

# Get formatted HTML
html_output = format_dataframe(df)

# Convert HTML to PDF again
pdf_file_path = "/mnt/data/formatted_table_with_state.pdf"
HTML(string=html_output).write_pdf(pdf_file_path)

# Provide the download link
pdf_file_path
