

def ThreadedFury(fipslist, cohort, max_threads=8):
    def task(fips, year, quarter):
        try:
            extract(fips, year, quarter, cohort)
            return f"{fips}_{year}_Q{quarter}", "success"
        except Exception as e:
            return f"{fips}_{year}_Q{quarter}", f"error: {e}"

    params = [(fips, year, qtr) 
              for fips in fipslist
              for year in range(2020, 2025)
              for qtr in range(1, 5)
              if not (year == 2020 and qtr == 1)]

    results = []
    with ThreadPoolExecutor(max_workers=max_threads) as executor:
        futures = {executor.submit(task, fips, year, qtr): (fips, year, qtr) for (fips, year, qtr) in params}
        for future in tqdm(as_completed(futures), total=len(futures), desc="Extracting to disk"):
            label, status = future.result()
            results.append((label, status))

    return results

log = ThreadedExtractToDisk(fipslist, cohort_df, max_threads=12)
