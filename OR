import pandas as pd
import us
import plotly.express as px
from concurrent.futures import ThreadPoolExecutor, as_completed

# Function to detect mismatch between naics6 prefix and naics2 (including ranges)
def is_mismatch(naics6, naics2):
    try:
        prefix = int(str(int(naics6)).zfill(6)[:2])
        if '-' in naics2:
            start, end = map(int, naics2.split('-'))
            return not (start <= prefix <= end)
        else:
            return prefix != int(naics2)
    except:
        return True

# Worker for each DOM2(year, fips)
def process_dom(year, fips):
    try:
        df = DOM2(year, fips)
        df = df[['yr_qtr', 'state', 'naics6', 'naics2']].dropna()
        df['naics6'] = df['naics6'].astype(str)
        df['naics2'] = df['naics2'].astype(str)
        df['mismatch'] = df.apply(lambda row: is_mismatch(row['naics6'], row['naics2']), axis=1)
        mismatches = df[df['mismatch']]
        return mismatches
    except Exception as e:
        print(f"Error in {year}, {fips}: {e}")
        return pd.DataFrame(columns=['yr_qtr', 'state', 'naics6', 'naics2', 'mismatch'])

# Threaded execution
def collect_mismatches_multithreaded():
    year_range = range(2020, 2025)
    fips_list = [state.fips for state in us.states.STATES if state.fips is not None]
    jobs = [(year, fips) for year in year_range for fips in fips_list]

    all_mismatches = []
    with ThreadPoolExecutor(max_workers=10) as executor:
        futures = [executor.submit(process_dom, year, fips) for year, fips in jobs]
        for future in as_completed(futures):
            result = future.result()
            if not result.empty:
                all_mismatches.append(result)

    return pd.concat(all_mismatches, ignore_index=True)

# Run the process
mismatched_df = collect_mismatches_multithreaded()

# Save examples (limit to first 100 rows)
mismatched_df.head(100).to_csv("naics_mismatch_examples.csv", index=False)

# Summarize by yr_qtr
summary = (
    mismatched_df.groupby('yr_qtr')
    .size()
    .reset_index(name='mismatch_count')
    .sort_values('yr_qtr')
)

# Save summary
summary.to_csv("naics_mismatch_summary.csv", index=False)

# Quick barplot
fig = px.bar(
    summary,
    x='yr_qtr',
    y='mismatch_count',
    title="NAICS6 vs NAICS2 Mismatch Counts by Year-Quarter",
    labels={'yr_qtr': 'Year-Quarter', 'mismatch_count': 'Mismatch Count'},
    text_auto=True
)
fig.update_layout(template='plotly_white')
fig.write_html("naics_mismatch_barplot.html")
fig.show()

print("âœ… Mismatch summary, examples, and barplot saved.")
