
def fuzzmatch(A, B):
    def extract_substrings(s):return {s[i:i+7] for i in range(len(s) - 6)} if isinstance(s, str) and len(s) >= 7 else set()
    A['UI_subs'] = A['UI'].apply(extract_substrings)
    matches = []
    for idx_b, row_b in B.iterrows():
        ui_b = row_b['UI']
        substrs_b = extract_substrings(ui_b)
        for idx_a, row_a in A.iterrows():
            if row_a['UI_subs'] & substrs_b:
                merged_row = pd.concat([row_a.drop('UI_subs'), row_b])
                matches.append(merged_row)
    
    if matches: merged_df = pd.DataFrame(matches)
    else: merged_df = pd.DataFrame(columns=A.columns.drop('UI_subs').tolist() + B.columns.tolist())
    return merged_df

if A['state'].eq('CT').any(): merged =fuzzmatch(A[A['state'] == 'CT'], B)
else: merged = A.merge(B, on='UI', how='inner')
