import pandas as pd
import plotly.express as px

# Load your data
df = pd.read_excel("your_file.xlsx")  # Replace with your file name

# Select parameter to visualize
param = "bogus percent"

# Create new column for animation frame (just yr_qtr)
df['yr_qtr_str'] = df['yr_qtr'].astype(str)

# Create heatmap as a scatter plot with 'state' on x, 'parameter' on color
fig = px.density_heatmap(
    df,
    x='state',
    y='yr_qtr_str',
    z=param,
    animation_frame='yr_qtr_str',
    color_continuous_scale='Viridis',
    title=f"Animated Heatmap of {param} by State and Year-Quarter",
    labels={'state': 'State', 'yr_qtr_str': 'Year-Quarter', param: param}
)

fig.update_layout(yaxis={'categoryorder': 'category ascending'})
fig.update_traces(hoverongaps=False)

# Save as interactive HTML
fig.write_html("animated_heatmap.html")

# Show inline if running in notebook
fig.show()

import pandas as pd
import dash
from dash import dcc, html
from dash.dependencies import Input, Output
import plotly.express as px

# Load your data
df = pd.read_excel("your_file.xlsx")  # <-- Replace with your actual file name

# List of parameters you want to choose from
param_cols = ['bogus percent', 'bad percent', 'zero wage percent', 'suspect score']

# Create the app
app = dash.Dash(__name__)

# Layout
app.layout = html.Div([
    html.H1("State/Quarter Parameter Dashboard"),

    html.Label("Select Parameter:"),
    dcc.Dropdown(
        id='param-dropdown',
        options=[{'label': col, 'value': col} for col in param_cols],
        value=param_cols[0]
    ),

    html.Label("Select State:"),
    dcc.Dropdown(
        id='state-dropdown',
        options=[{'label': s, 'value': s} for s in sorted(df['state'].unique())],
        value=sorted(df['state'].unique())[0]
    ),

    dcc.Graph(id='line-plot')
])

# Callback to update plot
@app.callback(
    Output('line-plot', 'figure'),
    Input('param-dropdown', 'value'),
    Input('state-dropdown', 'value')
)
def update_graph(selected_param, selected_state):
    filtered_df = df[df['state'] == selected_state].sort_values('yr_qtr')
    fig = px.line(filtered_df, x='yr_qtr', y=selected_param, markers=True,
                  title=f"{selected_param} over Time in {selected_state}")
    fig.update_layout(xaxis_title="Year-Quarter", yaxis_title=selected_param)
    return fig

if __name__ == '__main__':
    app.run_server(debug=True)


import pandas as pd
from jupyter_dash import JupyterDash
from dash import dcc, html
from dash.dependencies import Input, Output
import plotly.express as px

# Load your data
df = pd.read_excel("your_file.xlsx")  # Replace with your filename

# List of parameters
param_cols = ['bogus percent', 'bad percent', 'zero wage percent', 'suspect score']

# Create app
app = JupyterDash(__name__)

app.layout = html.Div([
    html.H1("State/Quarter Parameter Dashboard"),

    html.Label("Select Parameter:"),
    dcc.Dropdown(
        id='param-dropdown',
        options=[{'label': col, 'value': col} for col in param_cols],
        value=param_cols[0]
    ),

    html.Label("Select State:"),
    dcc.Dropdown(
        id='state-dropdown',
        options=[{'label': s, 'value': s} for s in sorted(df['state'].unique())],
        value=sorted(df['state'].unique())[0]
    ),

    dcc.Graph(id='line-plot')
])

@app.callback(
    Output('line-plot', 'figure'),
    Input('param-dropdown', 'value'),
    Input('state-dropdown', 'value')
)
def update_graph(selected_param, selected_state):
    filtered_df = df[df['state'] == selected_state].sort_values('yr_qtr')
    fig = px.line(filtered_df, x='yr_qtr', y=selected_param, markers=True,
                  title=f"{selected_param} over Time in {selected_state}")
    fig.update_layout(xaxis_title="Year-Quarter", yaxis_title=selected_param)
    return fig

# Run inside notebook
app.run_server(mode='inline')
